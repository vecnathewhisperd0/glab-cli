workflow:
  rules:
    # For merge requests, create a pipeline.
    - if: "$CI_MERGE_REQUEST_IID"
    # For default branch, create a pipeline (this includes on schedules, pushes, merges, etc.).
    # - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    # Temporarly create Ci for every branch:
    - if: "$CI_COMMIT_BRANCH"
    # For tags, create a pipeline.
    - if: "$CI_COMMIT_TAG"
    # For stable branches, create a pipeline.
    - if: '$CI_COMMIT_BRANCH =~ /^[\d-]+-stable$/'
    #

default:
  image: golang:1.18

variables:
  SAST_EXCLUDED_ANALYZERS: "bandit,gosec,eslint"

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml

code_navigation:
  image: golang:latest
  allow_failure: true
  script:
    - go get github.com/sourcegraph/lsif-go/cmd/lsif-go
    - lsif-go
  artifacts:
    reports:
      lsif: dump.lsif

run_tests:
  before_script:
    ## Adding private SSH key to the executor, more information: https://docs.gitlab.com/ee/ci/ssh_keys/#ssh-keys-when-using-the-docker-executor
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 600 ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

  script:
    - GITLAB_TOKEN=$CI_JOB_TOKEN make test
